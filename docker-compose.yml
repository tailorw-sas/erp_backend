services:
  redis:
    image: redis:7.0.11
    container_name: redis
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "6379:6379"
    volumes:
      - type: tmpfs
        target: /data
    networks:
      - custom_network

  kafka:
    image: confluentinc/cp-kafka:7.5.0.arm64
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: "1"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_MIN_INSYNC_REPLICAS: "1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      CLUSTER_ID: "29KtM_8-S9eaMK3cK93AFA"
#    volumes:
#      - ./kafka/logs:/var/lib/kafka/data
#      - ./kafka.properties:/tmp/kafka.properties
    networks:
      - custom_network

  postgres:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
    volumes:
      - $HOME/Documents/Docker/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - custom_network

  registry:
    build:
      context: ./registry
      dockerfile: Dockerfile
    container_name: registry
    ports:
        - "8761:8761"
    environment:
      - EUREKA_INSTANCE_HOSTNAME=registry
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://registry:8761/actuator/health" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - custom_network

  config:
    build:
      context: ./config
      dockerfile: Dockerfile
    container_name: config
    ports:
      - "8081:8081"
    environment:
      - GIT_USERNAME=tailorwr
      - GIT_PASSWORD=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
      - REGISTRY_SERVICE=registry
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://config:8081/actuator/health" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      registry:
        condition: service_healthy
    networks:
      - custom_network

  report:
    #image: tailorw/erp-report:dev
    build:
      context: ./report
      dockerfile: Dockerfile
    container_name: report
    ports:
      - "9908:9909"
    environment:
      - RC_ACTIVE_PROFILE=development
      - RC_SERVER_CONFIG=config
      - DB_HOST_RW=jdbc:postgresql://postgres_db:5432/finamer-reposts
      - DB_USER_RW=finamer_rw
      - DB_PASSWORD_RW=5G30y1cXz89cA1yc0gCE3OhhBLQkvUTV2icqz5qNRQGq4cbM5F0bc
      - DB_HOST_R=jdbc:postgresql://postgres_db:5432/finamer-reposts
      - DB_USER_R=finamer_ro
      - DB_PASSWORD_RO=DCMhpzOICbuUxiUSZ044mhWSHU1R2U53IDwOyJLRuwU1r9J74lITp
      - REGISTRY_SERVICE=registry
      - AWS_ACCESS_KEY=RIfhLlj8UiJM7zBk4rzB
      - AWS_ACCESS_SECRET=ISEyv5ZymrpE8AXnzcFxnlYxQdNimuzB8RJzd1pj
      - REPORT_SERVICE=http://report:9909/api/reports/generate-template
      - MINIO_URL=https://miniodev-api.tailorw.net/
    depends_on:
      registry:
        condition: service_healthy
      config:
        condition: service_healthy
    networks:
      - custom_network

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - RC_ACTIVE_PROFILE=development
      - RC_SERVER_CONFIG=config
      - REGISTRY_SERVICE=registry
      - KAFKA_BOOTSTRAP_ADDRESS=kafka:9092
      - KAFKA_GROUP_ID=groupId
      - REPORT_SERVICE=report:9908
    depends_on:
      registry:
        condition: service_healthy
      config:
        condition: service_healthy
    networks:
      - custom_network

  identity:
    #image: tailorw/erp-identity:dev
    build:
      context: ./identity
      dockerfile: Dockerfile
    container_name: identity
    ports:
      - "9901:9909"
    environment:
      - SERVER_PORT=9909
      - RC_ACTIVE_PROFILE=development
      - RC_SERVER_CONFIG=config
      - DB_HOST_RW=jdbc:postgresql://postgres_db:5432/finamer-identity
      - DB_USER_RW=finamer_rw
      - DB_PASSWORD_RW=5G30y1cXz89cA1yc0gCE3OhhBLQkvUTV2icqz5qNRQGq4cbM5F0bc
      - DB_HOST_R=jdbc:postgresql://postgres_db:5432/finamer-identity
      - DB_USER_R=finamer_ro
      - DB_PASSWORD_RO=DCMhpzOICbuUxiUSZ044mhWSHU1R2U53IDwOyJLRuwU1r9J74lITp
      - REGISTRY_SERVICE=registry
      - REPORT_SERVICE=http://report:9908/api/reports/generate-template
      - KAFKA_BOOTSTRAP_ADDRESS=kafka:9092
      - KAFKA_GROUP_ID=identity
    depends_on:
      registry:
        condition: service_healthy
      config:
        condition: service_healthy
    networks:
      - custom_network

  settings:
    build:
      context: ./settings
      dockerfile: Dockerfile
    container_name: settings
    ports:
      - "9906:9909"
    environment:
      - RC_ACTIVE_PROFILE=development
      - RC_SERVER_CONFIG=config
      - DB_HOST_RW=jdbc:postgresql://postgres_db:5432/finamer-settings
      - DB_USER_RW=finamer_rw
      - DB_PASSWORD_RW=5G30y1cXz89cA1yc0gCE3OhhBLQkvUTV2icqz5qNRQGq4cbM5F0bc
      - DB_HOST_R=jdbc:postgresql://postgres_db:5432/finamer-settings
      - DB_USER_R=finamer_ro
      - DB_PASSWORD_RO=DCMhpzOICbuUxiUSZ044mhWSHU1R2U53IDwOyJLRuwU1r9J74lITp
      - REGISTRY_SERVICE=registry
      - KAFKA_BOOTSTRAP_ADDRESS=kafka:9092
      - KAFKA_GROUP_ID=settings
      - REPORT_SERVICE=http://report:9908/api/reports/generate-template
    depends_on:
      registry:
        condition: service_healthy
      config:
        condition: service_healthy
    networks:
      - custom_network

  cloud-bridges:
    #mage: tailorw/erp-cloud-bridges:dev
    build:
      context: ./cloudBridges
      dockerfile: Dockerfile
    container_name: cloudBridges
    ports:
      - "8097:9909"
    environment:
      - RC_ACTIVE_PROFILE=development
      - RC_SERVER_CONFIG=config
      - REGISTRY_SERVICE=registry
      - DB_HOST_RW=jdbc:postgresql://postgres_db:5432/finamer-cloudbridges
      - DB_USER_RW=finamer_rw
      - DB_PASSWORD_RW=5G30y1cXz89cA1yc0gCE3OhhBLQkvUTV2icqz5qNRQGq4cbM5F0bc
      - DB_HOST_R=jdbc:postgresql://postgres_db:5432/finamer-cloudbridges
      - DB_USER_R=finamer_ro
      - DB_PASSWORD_RO=DCMhpzOICbuUxiUSZ044mhWSHU1R2U53IDwOyJLRuwU1r9J74lITp
      - KAFKA_BOOTSTRAP_ADDRESS=kafka:9092
      - KAFKA_GROUP_ID=CLODUBRIDGES
      - REPORT_SERVICE=http://report:9908/api/reports/generate-template
      - MINIO_URL=https://miniodev-api.tailorw.net/
      - AWS_ACCESS_KEY=RIfhLlj8UiJM7zBk4rzB
      - AWS_ACCESS_SECRET=ISEyv5ZymrpE8AXnzcFxnlYxQdNimuzB8RJzd1pj
      - MAILJET_KEY=ad3d635ddaf288b3c6111b37cefb1d4a
      - MAILJET_SECRET=41a65d3eb55b24c2db2d9f7dff54a767
    depends_on:
      registry:
        condition: service_healthy
      config:
        condition: service_healthy
    networks:
      - custom_network

  invoicing:
    build:
      context: ./invoicing
      dockerfile: Dockerfile
    container_name: invoicing
    ports:
      - "9907:9909"
    environment:
      - RC_ACTIVE_PROFILE=development
      - RC_SERVER_CONFIG=config
      - DB_HOST_RW=jdbc:postgresql://postgres_db:5432/finamer-invoicing
      - DB_USER_RW=finamer_rw
      - DB_PASSWORD_RW=5G30y1cXz89cA1yc0gCE3OhhBLQkvUTV2icqz5qNRQGq4cbM5F0bc
      - DB_HOST_R=jdbc:postgresql://postgres_db:5432/finamer-invoicing
      - DB_USER_R=finamer_ro
      - DB_PASSWORD_RO=DCMhpzOICbuUxiUSZ044mhWSHU1R2U53IDwOyJLRuwU1r9J74lITp
      - REGISTRY_SERVICE=registry
      - KAFKA_BOOTSTRAP_ADDRESS=kafka:9092
      - KAFKA_GROUP_ID=IDENTITY
      - REDIS_ADDRESS=redis
      - REDIS_PORT=6379
      - REPORT_SERVICE=http://report:9908/api/reports/generate-template
      - FILE_SERVICE_URL=http://cloudBridges:8097/api/files
      - MAIL_API_URL=http://cloudBridges:8097/api/mail/send
      - MAIL_API_URL=http://cloudBridges:8097/api/ftp
      - PAYMENT_SERVICE=http://payment:9902
    depends_on:
      registry:
        condition: service_healthy
      config:
        condition: service_healthy
    networks:
      - custom_network

  payment:
    build:
        context: ./payment
        dockerfile: Dockerfile
    container_name: payment
    ports:
      - "9902:9909"
    environment:
      - RC_ACTIVE_PROFILE=development
      - RC_SERVER_CONFIG=config
      - DB_HOST_RW=jdbc:postgresql://postgres_db:5432/finamer-payments
      - DB_USER_RW=finamer_rw
      - DB_PASSWORD_RW=5G30y1cXz89cA1yc0gCE3OhhBLQkvUTV2icqz5qNRQGq4cbM5F0bc
      - DB_HOST_R=jdbc:postgresql://postgres_db:5432/finamer-payments
      - DB_USER_R=finamer_ro
      - DB_PASSWORD_RO=DCMhpzOICbuUxiUSZ044mhWSHU1R2U53IDwOyJLRuwU1r9J74lITp
      - REGISTRY_SERVICE=registry
      - KAFKA_BOOTSTRAP_ADDRESS=kafka:9092
      - KAFKA_GROUP_ID=PAYMENT
      - REPORT_SERVICE=http://report:9908/api/reports/generate-template
      - INVOICE_SERVICE=http://invoicing:9907/api/manage-invoice/report
      - PAYMENT_SERVICE=http://payment:9902
      - SETTINGS_SERVICE=http://settings:9906
      - REDIS_ADDRESS=redis
      - REDIS_PORT=6379
      - PAYMENT_FILE_SERVICE_URL=http://cloudBridges:8097/api/files
      - MAIL_API_URL=http://cloudBridges:8097/api/ftp
      - FILE_SERVICE_URL=http://cloudBridges:8097/api/files
      - MAIL_API_URL=http://cloudBridges:8097/api/mail/send
    depends_on:
      registry:
        condition: service_healthy
      config:
        condition: service_healthy
    networks:
      - custom_network

  credit-card:
    build:
      context: ./creditCard
      dockerfile: Dockerfile
    container_name: creditCard
    ports:
      - "9904:9909"
    environment:
      - RC_ACTIVE_PROFILE=development
      - RC_SERVER_CONFIG=config
      - DB_HOST_RW=jdbc:postgresql://postgres_db:5432/finamer-credit-card
      - DB_USER_RW=finamer_rw
      - DB_PASSWORD_RW=5G30y1cXz89cA1yc0gCE3OhhBLQkvUTV2icqz5qNRQGq4cbM5F0bc
      - DB_HOST_R=jdbc:postgresql://postgres_db:5432/finamer-credit-card
      - DB_USER_R=finamer_ro
      - DB_PASSWORD_RO=DCMhpzOICbuUxiUSZ044mhWSHU1R2U53IDwOyJLRuwU1r9J74lITp
      - REGISTRY_SERVICE=registry
      - KAFKA_BOOTSTRAP_ADDRESS=kafka:9092
      - KAFKA_GROUP_ID=CREDITCARD
      - REPORT_SERVICE=http://report:9908/api/reports/generate-template
      - MAIL_API_URL=http://cloudBridges:8097/api/mail/send
      - FILE_SERVICE_URL=http://cloudBridges:8097/api/files
    depends_on:
      registry:
        condition: service_healthy
      config:
        condition: service_healthy
    networks:
      - custom_network
#  audit:
#    image: tailorw/erp-audit:dev
#    container_name: audit
#    ports:
#      - "9905:9908"
#    environment:
#      - RC_ACTIVE_PROFILE=development
#      - RC_SERVER_CONFIG=192.168.100.57
#      - DB_HOST_RW=jdbc:postgresql://192.168.100.57:5432/finamer-audit
#      - DB_USER_RW=finamer_rw
#      - DB_PASSWORD_RW=5G30y1cXz89cA1yc0gCE3OhhBLQkvUTV2icqz5qNRQGq4cbM5F0bc
#      - REGISTRY_SERVICE=192.168.100.57
#      - KAFKA_BOOTSTRAP_ADDRESS=192.168.100.57:9092
#      - KAFKA_GROUP_ID=audit
#      - ELASTIC_SEARCH_URL=192.168.100.57:9200
#      - ELASTIC_SEARCH_USERNAME=elastic
#      - ELASTIC_SEARCH_PASSWORD=3WT2tyFUzaZWKADl
#    depends_on:
#      registry:
#        condition: service_healthy
#      config:
#        condition: service_healthy
#    networks:
#      - custom_network
#
#  scheduler:
#    image: tailorw/erp-scheduler:dev
#    container_name: scheduler
#    ports:
#      - "9912:9909"
#    environment:
#      - RC_ACTIVE_PROFILE=development
#      - RC_SERVER_CONFIG=192.168.100.57
#      - DB_HOST_RW=jdbc:postgresql://192.168.100.57:5432/finamer-scheduler
#      - DB_USER_RW=finamer_rw
#      - DB_PASSWORD_RW=5G30y1cXz89cA1yc0gCE3OhhBLQkvUTV2icqz5qNRQGq4cbM5F0bc
#      - DB_HOST_R=jdbc:postgresql://192.168.100.57:5432/finamer-scheduler
#      - DB_USER_R=finamer_ro
#      - DB_PASSWORD_RO=DCMhpzOICbuUxiUSZ044mhWSHU1R2U53IDwOyJLRuwU1r9J74lITp
#      - REGISTRY_SERVICE=192.168.100.57
#      - KAFKA_BOOTSTRAP_ADDRESS=192.168.100.57:9092
#      - KAFKA_GROUP_ID=SCHEDULER
#    depends_on:
#      registry:
#        condition: service_healthy
#      config:
#        condition: service_healthy
#    networks:
#      - custom_network

networks:
  custom_network:
    driver: bridge
