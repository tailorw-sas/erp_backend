pipeline {
    
    agent any

	environment {
		ORIGIN_BRANCH_NAME = "${env.GIT_BRANCH}"
		DOCKER_IMAGE_NAME = 'tailorw/erp-identity:version'
		SRC = 'cloudBridges'
		GIT_PACKAGE_TOKEN = credentials("GithubPackageToken")
                DOCKER_CREDENTIALS = 'Tailorw-DockerCredentials'
                NAMESPACE = 'finamer'
		
                YAML = 'identity.yaml'
                DEPLOYMENT_NAME = 'identity'
		
	}
	
	triggers {
        githubPush()
    }
    
    stages {
        stage ('Init') {
            steps {
                echo 'Initializing......'
		    script {
			def branch = env.ORIGIN_BRANCH_NAME.replace('origin/', '')
			env.BRANCH_NAME = branch

			def dockerImage = env.DOCKER_IMAGE_NAME.replace('version', env.BRANCH_NAME)
			env.DOCKER_IMAGE = dockerImage
			
			//if(env.BRANCH_NAME == 'dev'){
                            
			//}
		    }
            }
        }

	stage ('Create docker image'){
		steps {
			dir("${SRC}"){
				
				sh 'docker build -t $DOCKER_IMAGE --build-arg PACKAGE_TOKEN=$GIT_PACKAGE_TOKEN --build-arg POM_NAME=pom-$BRANCH_NAME.xml.'
				withDockerRegistry(credentialsId: "${DOCKER_CREDENTIALS}", url: "") {
                			sh 'docker push $DOCKER_IMAGE'
                		}
			}
		}
	}

	stage ('Publish to Kubernetes') {
            steps {
                withKubeConfig(credentialsId: 'KubernetesCredential', namespace: "${NAMESPACE}", restrictKubeConfigAccess: false, serverUrl: 'https://172.20.41.150:5443') {
                    sh 'kubectl apply -f kubernetes-config/deployments/$YAML'
                }
            }
        }
    }
}
